{"version":3,"sources":["utils.js","Components/TransactionModal.jsx","Components/Transactions.jsx","Components/Projects.jsx","Components/Dashboard.jsx","Components/Reports.jsx","index.js"],"names":["months","_months","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","_today","Date","dd","String","getDate","padStart","mm","getMonth","today","getFullYear","addOneYear","input","date","setFullYear","subtractOneYear","TransactionModal","isOpen","closeModal","transactionType","setTransactionType","formTransactionData","setFormTransactionData","handleTransaction","showError","setShowError","caller","projectStartDate","projectEndDate","handleChange","event","target","name","value","onRequestClose","closeTimeoutMS","className","overlayClassName","ariaHideApp","onSubmit","e","preventDefault","htmlFor","type","id","defaultValue","onChange","required","min","max","onKeyDown","step","Number","parseFloat","Alert","severity","onClick","disabled","descendingComparator","a","b","orderBy","parseInt","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","numeric","disablePadding","label","EnhancedTableHead","props","onRequestSort","TableHead","TableRow","headCell","TableCell","align","sortDirection","TableSortLabel","active","direction","property","Box","component","sx","visuallyHidden","fontFamily","paddingLeft","Transactions","useContext","tabContext","settab","projectId","counter","useState","transactionCounter","setTransactionCounter","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","transactionData","setTransactionData","setProjectStartDate","setProjectEndDate","setCaller","project_id","isopen","setisopen","useEffect","axios","get","response","data","openModal","matches","useMediaQuery","emptyRows","Math","length","width","marginTop","display","justifyContent","Paper","mb","Toolbar","pl","sm","pr","xs","Typography","flex","variant","url","put","catch","error","console","log","post","IconButton","borderRadius","color","responseType","then","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","opacity","TableContainer","Table","minWidth","size","TableBody","slice","row","actualmonth","format","paddingRight","Intl","NumberFormat","amount","confirm","delete","style","height","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","Projects","setProjectId","setCounter","projectData","setProjectData","setIsOpen","formProjectData","setFormProjectData","setStep","Array","fill","showInputError","setShowInputError","prevState","projectMonthlyBudgets","test","formatDate","isNaN","Object","values","reduce","start","end","startDate","endDate","startMonth","endMonth","currentYear","x","toString","substr","month","abs","key","validity","badInput","temp","every","scope","start_date","end_date","manager","budget","projectName","projectManager","projectBudget","monthly_budget","Dashboard","setData","labels","setLabels","chartData","setChartData","loader","setLoader","temp1","temp2","apiData","expenses","keys","expense","push","status","alignItems","CircularProgress","Card","boxShadow","CardContent","placeItems","round","toFixed","datasets","backgroundColor","Reports","expenseData","setExpenseData","plannedData","setPlannedData","isLoading","setIsLoading","borderColor","borderWidth","options","scales","beginAtZero","y","Modal","setAppElement","React","createContext","Main","tab","showingForm","setshowingForm","projectNames","setProjectNames","monthBudget","setMonthBudget","allProjects","p","localStorage","getItem","style1","textDecoration","style2","fontWeight","borderBottom","paddingBottom","closeForm","remainingBudget","to","setItem","project","Provider","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.355807b6.chunk.js","sourcesContent":["export const months = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"Jun\",\r\n  \"Jul\",\r\n  \"Aug\",\r\n  \"Sep\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\",\r\n];\r\nexport const _months = {\r\n  Jan: \"january\",\r\n  Feb: \"february\",\r\n  Mar: \"march\",\r\n  Apr: \"april\",\r\n  May: \"may\",\r\n  Jun: \"june\",\r\n  Jul: \"july\",\r\n  Aug: \"august\",\r\n  Sep: \"september\",\r\n  Oct: \"october\",\r\n  Nov: \"november\",\r\n  Dec: \"december\",\r\n};\r\nlet _today = new Date();\r\nlet dd = String(_today.getDate()).padStart(2, \"0\");\r\nlet mm = String(_today.getMonth() + 1).padStart(2, \"0\");\r\nlet yyyy = _today.getFullYear();\r\nexport const today = yyyy + \"-\" + mm + \"-\" + dd;\r\n\r\nexport const addOneYear = (input) => {\r\n  const date = new Date(input);\r\n  date.setFullYear(date.getFullYear() + 1);\r\n  let dd = String(date.getDate()).padStart(2, \"0\");\r\n  let mm = String(date.getMonth()).padStart(2, \"0\");\r\n  let yyyy = date.getFullYear();\r\n  return yyyy + \"-\" + mm + \"-\" + dd;\r\n};\r\n\r\nexport const subtractOneYear = (input) => {\r\n  const date = new Date(input);\r\n  date.setFullYear(date.getFullYear() - 1);\r\n  let dd = String(date.getDate()).padStart(2, \"0\");\r\n  let mm = String(date.getMonth() + 2).padStart(2, \"0\");\r\n  let yyyy = date.getFullYear();\r\n  return yyyy + \"-\" + mm + \"-\" + dd;\r\n};\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { Alert } from \"@mui/material\";\r\nimport { today } from \"../utils\";\r\n\r\nconst TransactionModal = ({\r\n  isOpen,\r\n  closeModal,\r\n  transactionType,\r\n  setTransactionType,\r\n  formTransactionData,\r\n  setFormTransactionData,\r\n  handleTransaction,\r\n  showError,\r\n  setShowError,\r\n  caller,\r\n  projectStartDate,\r\n  projectEndDate,\r\n}) => {\r\n  const handleChange = (event) => {\r\n    if (event.target.name === \"transaction-amount\") {\r\n      if (event.target.value[0] === \"-\") {\r\n        setShowError(true);\r\n      } else {\r\n        setShowError(false);\r\n        setFormTransactionData({\r\n          ...formTransactionData,\r\n          [event.target.name]: event.target.value,\r\n        });\r\n      }\r\n    } else if (event.target.name === \"transaction-date\") {\r\n      setFormTransactionData({\r\n        ...formTransactionData,\r\n        \"transaction-date\": event.target.value,\r\n      });\r\n    } else {\r\n      setFormTransactionData({\r\n        ...formTransactionData,\r\n        [event.target.name]: event.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleTransactionType = (event) => {\r\n    setTransactionType(event.target.value);\r\n    handleChange(event);\r\n  };\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onRequestClose={closeModal}\r\n      closeTimeoutMS={200}\r\n      className=\"Modal\"\r\n      overlayClassName=\"Overlay\"\r\n      ariaHideApp={false}\r\n    >\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n        }}\r\n      >\r\n        <center>\r\n          <h1 className=\"project-h1\">{caller} a Transaction</h1>\r\n        </center>\r\n        <label htmlFor=\"transaction-name\">Transaction Name: </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"transaction-name\"\r\n          name=\"transaction-name\"\r\n          defaultValue={\r\n            caller === \"Edit\" ? formTransactionData[\"transaction-name\"] : \"\"\r\n          }\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <label htmlFor=\"transaction-date\">Transaction Date: </label>\r\n        <input\r\n          type=\"date\"\r\n          id=\"transaction-date\"\r\n          name=\"transaction-date\"\r\n          defaultValue={\r\n            caller === \"Edit\" ? formTransactionData[\"transaction-date\"] : today\r\n          }\r\n          min={projectStartDate}\r\n          max={today < projectEndDate ? today : projectEndDate}\r\n          onChange={handleChange}\r\n          onKeyDown={(e) => e.preventDefault()}\r\n          required\r\n        />\r\n        <label htmlFor=\"transaction-type\">Type of Transaction: </label>\r\n        <select\r\n          type=\"text\"\r\n          id=\"transaction-type\"\r\n          name=\"transaction-type\"\r\n          value={\r\n            caller === \"Edit\"\r\n              ? formTransactionData[\"transaction-type\"]\r\n              : transactionType\r\n          }\r\n          onChange={handleTransactionType}\r\n          required\r\n        >\r\n          <option value=\"Architect\">Architect</option>\r\n          <option value=\"DBA\">DBA</option>\r\n          <option value=\"Technical Lead\">Technical Lead</option>\r\n          <option value=\"Developer\">Developer</option>\r\n          <option value=\"Business Analyst\">Business Analyst</option>\r\n          <option value=\"Tester\">Tester</option>\r\n          <option value=\"Networking and Security\">\r\n            Networking and Security\r\n          </option>\r\n          <option value=\"Travel Expenses\">Travel Expenses</option>\r\n          <option value=\"Hardware Costs\">Hardware Costs</option>\r\n          <option value=\"Software Costs\">Software Costs</option>\r\n          <option value=\"Stationery\">Stationery</option>\r\n          <option value=\"Training\">Training</option>\r\n          <option value=\"Miscellaneous\">Miscellaneous</option>\r\n        </select>\r\n        <label\r\n          htmlFor=\"transaction-amount\"\r\n          className={showError ? \"labelError\" : \"tempclass\"}\r\n        >\r\n          Transaction Amount:\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          step=\"any\"\r\n          id=\"transaction-amount\"\r\n          name=\"transaction-amount\"\r\n          defaultValue={\r\n            caller === \"Edit\"\r\n              ? Number.parseFloat(formTransactionData[\"transaction-amount\"])\r\n              : \"\"\r\n          }\r\n          onChange={handleChange}\r\n          className={showError ? \"errorClass\" : \"tempclass\"}\r\n          required\r\n        />\r\n        {showError && (\r\n          <Alert severity=\"error\">Enter a positive value for amount!</Alert>\r\n        )}\r\n        <center>\r\n          <button type=\"reset\" value=\"Reset\">\r\n            Reset\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={handleTransaction}\r\n            id=\"transaction-submit\"\r\n            disabled={\r\n              showError ||\r\n              (caller === \"Add\" &&\r\n                (formTransactionData[\"transaction-amount\"] === 0 ||\r\n                  formTransactionData[\"transaction-name\"] === \"\"))\r\n            }\r\n          >\r\n            Submit\r\n          </button>\r\n        </center>\r\n      </form>\r\n      <button onClick={closeModal} id=\"closeButton\">\r\n        &times;\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TransactionModal;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Toolbar,\r\n  Box,\r\n  Typography,\r\n  IconButton,\r\n  Paper,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport DownloadIcon from \"@mui/icons-material/Download\";\r\nimport { visuallyHidden } from \"@mui/utils\";\r\nimport axios from \"axios\";\r\nimport \"./Transactions.css\";\r\nimport \"../reset.css\";\r\nimport { tabContext } from \"../index\";\r\nimport TransactionModal from \"./TransactionModal\";\r\nimport { today } from \"../utils\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (orderBy === \"amount\") {\r\n    if (parseInt(b[orderBy]) < parseInt(a[orderBy])) {\r\n      return -1;\r\n    }\r\n    if (parseInt(b[orderBy]) > parseInt(a[orderBy])) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  } else {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"serial\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"S.No.\",\r\n  },\r\n  {\r\n    id: \"name\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Transaction Name\",\r\n  },\r\n  {\r\n    id: \"amount\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Transaction Amount\",\r\n  },\r\n  {\r\n    id: \"date\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Transaction Date\",\r\n  },\r\n  {\r\n    id: \"type\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Transaction Type\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) =>\r\n          headCell.id !== \"serial\" ? (\r\n            <TableCell\r\n              key={headCell.id}\r\n              align={headCell.numeric ? \"center\" : \"left\"}\r\n              sortDirection={orderBy === headCell.id ? order : false}\r\n            >\r\n              <TableSortLabel\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : \"asc\"}\r\n                onClick={createSortHandler(headCell.id)}\r\n              >\r\n                {headCell.label}\r\n                {orderBy === headCell.id ? (\r\n                  <Box component=\"span\" sx={visuallyHidden}>\r\n                    {order === \"desc\"\r\n                      ? \"sorted descending\"\r\n                      : \"sorted ascending\"}\r\n                  </Box>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            </TableCell>\r\n          ) : (\r\n            <TableCell key={headCell.id} sx={{ fontFamily: \"Manrope\" }}>\r\n              {headCell.label}\r\n            </TableCell>\r\n          )\r\n        )}\r\n        <TableCell sx={{ fontFamily: \"Manrope\", paddingLeft: 3.5 }}>\r\n          Options\r\n        </TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Transactions = () => {\r\n  const { settab, projectId, counter } = useContext(tabContext);\r\n  const [transactionCounter, setTransactionCounter] = useState(0);\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"serial\");\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [transactionData, setTransactionData] = useState([]);\r\n  const [projectStartDate, setProjectStartDate] = useState();\r\n  const [projectEndDate, setProjectEndDate] = useState();\r\n  const [caller, setCaller] = useState(null);\r\n  const [transactionType, setTransactionType] = useState(\"Architect\");\r\n  const [formTransactionData, setFormTransactionData] = useState({\r\n    \"transaction-name\": \"\",\r\n    \"transaction-type\": \"Architect\",\r\n    \"transaction-amount\": 0,\r\n    \"transaction-date\": \"\",\r\n    project_id: projectId,\r\n  });\r\n  const [isopen, setisopen] = useState(false);\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await axios.get(\r\n        `http://localhost:8000/api/project/${projectId}/transactions`\r\n      );\r\n      setTransactionData(response.data[\"transactions\"]);\r\n      setProjectStartDate(response.data[\"projectStartDate\"]);\r\n      setProjectEndDate(response.data[\"projectEndDate\"]);\r\n    })();\r\n  }, [projectId, counter, transactionCounter]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const openModal = () => {\r\n    setisopen(true);\r\n    setFormTransactionData({\r\n      ...formTransactionData,\r\n      \"transaction-date\": today,\r\n      project_id: projectId,\r\n    });\r\n  };\r\n  const closeModal = () => {\r\n    setisopen(false);\r\n    setShowError(false);\r\n    setFormTransactionData({\r\n      \"transaction-name\": \"\",\r\n      \"transaction-type\": \"Architect\",\r\n      \"transaction-amount\": 0,\r\n      \"transaction-date\": \"\",\r\n      project_id: projectId,\r\n    });\r\n  };\r\n\r\n  const handleTransaction = (event) => {\r\n    event.preventDefault();\r\n    if (!showError) {\r\n      const url = \"http://localhost:8000/api/projects/add-transaction/\";\r\n\r\n      if (caller === \"Edit\") {\r\n        axios.put(url, formTransactionData).catch((error) => {\r\n          console.log(error);\r\n        });\r\n      } else {\r\n        axios.post(url, formTransactionData).catch((error) => {\r\n          console.log(error);\r\n        });\r\n      }\r\n      setTransactionCounter(transactionCounter + 1);\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  // for media queries with MUI\r\n  const matches = useMediaQuery(\"(max-width: 600px)\");\r\n\r\n  const emptyRows =\r\n    page > 0\r\n      ? Math.max(0, (1 + page) * rowsPerPage - transactionData.length)\r\n      : 0;\r\n\r\n  useEffect(() => {\r\n    settab(\"tran\");\r\n  }, [settab]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: \"100%\",\r\n        marginTop: \"2.5%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Box sx={{ width: \"80%\" }}>\r\n        <Paper sx={{ width: \"100%\", mb: 2 }}>\r\n          <Toolbar\r\n            sx={{\r\n              pl: { sm: 2 },\r\n              pr: { xs: 1, sm: 1 },\r\n            }}\r\n          >\r\n            <Typography\r\n              sx={{ flex: \"1 1 100%\" }}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              Transaction Table\r\n            </Typography>\r\n            <TransactionModal\r\n              isOpen={isopen}\r\n              closeModal={closeModal}\r\n              transactionType={transactionType}\r\n              setTransactionType={setTransactionType}\r\n              formTransactionData={formTransactionData}\r\n              setFormTransactionData={setFormTransactionData}\r\n              handleTransaction={handleTransaction}\r\n              showError={showError}\r\n              setShowError={setShowError}\r\n              caller={caller}\r\n              projectStartDate={projectStartDate}\r\n              projectEndDate={projectEndDate}\r\n            />\r\n            <IconButton\r\n              sx={{ borderRadius: 0, color: \"black\" }}\r\n              onClick={() => {\r\n                axios\r\n                  .get(\r\n                    `http://localhost:8000/api/project/${projectId}/download_csv/`,\r\n                    { responseType: \"blob\" }\r\n                  )\r\n                  .then((response) => {\r\n                    const url = window.URL.createObjectURL(\r\n                      new Blob([response.data])\r\n                    );\r\n                    const link = document.createElement(\"a\");\r\n                    link.href = url;\r\n                    link.setAttribute(\r\n                      \"download\",\r\n                      `${projectId}_transactions.csv`\r\n                    );\r\n                    document.body.appendChild(link);\r\n                    link.click();\r\n                  })\r\n                  .catch((error) => {\r\n                    console.log(error);\r\n                  });\r\n              }}\r\n            >\r\n              <DownloadIcon sx={{ opacity: \"70%\" }} />\r\n              {!matches && <Typography>Export CSV</Typography>}\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={() => {\r\n                openModal();\r\n                setCaller(\"Add\");\r\n              }}\r\n              sx={{ borderRadius: 0, color: \"black\" }}\r\n            >\r\n              <AddIcon sx={{ opacity: \"70%\" }} />\r\n              {!matches && <Typography>Add Transaction</Typography>}\r\n            </IconButton>\r\n          </Toolbar>\r\n          <TableContainer>\r\n            <Table\r\n              sx={{ minWidth: 750 }}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={\"medium\"}\r\n            >\r\n              <EnhancedTableHead\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onRequestSort={handleRequestSort}\r\n              />\r\n              <TableBody>\r\n                {stableSort(transactionData, getComparator(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const date = new Date(row.date);\r\n                    let actualmonth = date.getMonth() + 1;\r\n                    let day =\r\n                      date.getDate() >= 10\r\n                        ? date.getDate()\r\n                        : \"0\" + date.getDate();\r\n                    let month =\r\n                      actualmonth >= 10 ? actualmonth : \"0\" + actualmonth;\r\n                    const format = day + \"/\" + month + \"/\" + date.getFullYear();\r\n                    return (\r\n                      <TableRow key={index}>\r\n                        <TableCell>{page * rowsPerPage + index + 1}</TableCell>\r\n                        <TableCell align=\"center\" sx={{ paddingRight: 5 }}>\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\" sx={{ paddingRight: 5 }}>\r\n                          ${new Intl.NumberFormat().format(row.amount)}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\" sx={{ paddingRight: 5 }}>\r\n                          {format}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\" sx={{ paddingRight: 5 }}>\r\n                          {row.type}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              openModal();\r\n                              setCaller(\"Edit\");\r\n                              setFormTransactionData({\r\n                                \"transaction-id\": row.id,\r\n                                \"transaction-name\": row.name,\r\n                                \"transaction-type\": row.type,\r\n                                \"transaction-amount\": row.amount,\r\n                                \"transaction-date\": row.date,\r\n                                project_id: projectId,\r\n                              });\r\n                            }}\r\n                          >\r\n                            <EditIcon\r\n                              sx={{\r\n                                opacity: \"70%\",\r\n                              }}\r\n                            />\r\n                          </IconButton>\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              if (\r\n                                window.confirm(\r\n                                  \"Are you sure you want to delete?\"\r\n                                )\r\n                              ) {\r\n                                axios\r\n                                  .delete(\r\n                                    \"http://localhost:8000/api/projects/add-transaction/\",\r\n                                    {\r\n                                      data: {\r\n                                        \"transaction-id\": row.id,\r\n                                      },\r\n                                    }\r\n                                  )\r\n                                  .catch(() => {\r\n                                    console.error();\r\n                                  });\r\n                                setTransactionCounter(transactionCounter + 1);\r\n                              }\r\n                            }}\r\n                          >\r\n                            <DeleteIcon\r\n                              sx={{\r\n                                opacity: \"70%\",\r\n                              }}\r\n                            />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow\r\n                    style={{\r\n                      height: 53 * emptyRows,\r\n                    }}\r\n                  >\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={transactionData.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Transactions;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Modal from \"react-modal\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Toolbar,\r\n  Box,\r\n  Typography,\r\n  IconButton,\r\n  Paper,\r\n  Alert,\r\n} from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { visuallyHidden } from \"@mui/utils\";\r\nimport axios from \"axios\";\r\nimport \"./Transactions.css\";\r\nimport \"../reset.css\";\r\nimport { tabContext } from \"../index\";\r\nimport { months, addOneYear, _months } from \"../utils.js\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (orderBy === \"budget\") {\r\n    if (parseInt(b[orderBy]) < parseInt(a[orderBy])) {\r\n      return -1;\r\n    }\r\n    if (parseInt(b[orderBy]) > parseInt(a[orderBy])) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  } else {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"id\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"S.No.\",\r\n  },\r\n  {\r\n    id: \"name\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Project Name\",\r\n  },\r\n  {\r\n    id: \"start_date\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Project Start Date\",\r\n  },\r\n  {\r\n    id: \"end_date\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Project End Date\",\r\n  },\r\n  {\r\n    id: \"manager\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Project Manager\",\r\n  },\r\n  {\r\n    id: \"budget\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Project Budget\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"center\" : \"left\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n        <TableCell sx={{ fontFamily: \"Manrope\", paddingLeft: 3.5 }}>\r\n          Options\r\n        </TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Projects = () => {\r\n  const { settab, projectId, counter, setProjectId, setCounter } =\r\n    useContext(tabContext);\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"serial\");\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [projectData, setProjectData] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [showError, setShowError] = useState(false);\r\n  const [formProjectData, setFormProjectData] = useState({});\r\n  const [step, setStep] = useState(1);\r\n  const [showInputError, setShowInputError] = useState(Array(12).fill(false));\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    if (\r\n      event.target.name === \"projectBudget\" ||\r\n      event.target.name === \"projectStartDate\" ||\r\n      event.target.name === \"projectEndDate\"\r\n    ) {\r\n      setFormProjectData((prevState) => ({\r\n        ...prevState,\r\n        projectMonthlyBudgets: {},\r\n      }));\r\n    }\r\n    if (event.target.name === \"projectBudget\") {\r\n      if (!/^[0-9]+$/.test(event.target.value)) {\r\n        setShowError(true);\r\n      } else {\r\n        setShowError(false);\r\n        setFormProjectData((prevState) => ({\r\n          ...prevState,\r\n          [event.target.name]: event.target.value,\r\n        }));\r\n      }\r\n    } else {\r\n      setFormProjectData((prevState) => ({\r\n        ...prevState,\r\n        [event.target.name]: event.target.value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const openModal = () => {\r\n    setIsOpen(true);\r\n    setFormProjectData({\r\n      ...formProjectData,\r\n      project_id: projectId,\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsOpen(false);\r\n    setShowError(false);\r\n    setStep(1);\r\n    setShowInputError(Array(12).fill(false));\r\n  };\r\n\r\n  const updateProject = (event) => {\r\n    event.preventDefault();\r\n    if (!showError) {\r\n      const url = \"http://localhost:8000/api/projects/modify-project/\";\r\n      axios.put(url, formProjectData).catch((error) => {\r\n        console.log(error);\r\n      });\r\n      setCounter(counter + 1);\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - projectData.length) : 0;\r\n\r\n  const formatDate = (input) => {\r\n    const date = new Date(input);\r\n    let actualmonth = date.getMonth() + 1;\r\n    let day = date.getDate() >= 10 ? date.getDate() : \"0\" + date.getDate();\r\n    let month = actualmonth >= 10 ? actualmonth : \"0\" + actualmonth;\r\n    return day + \"/\" + month + \"/\" + date.getFullYear();\r\n  };\r\n\r\n  useEffect(() => {\r\n    settab(\"proj\");\r\n  }, [settab]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await axios.get(\"http://localhost:8000/api/projects/\");\r\n      setProjectData(response.data);\r\n    })();\r\n  }, [projectId, counter]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: \"100%\",\r\n        marginTop: \"2.5%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Box sx={{ width: \"80%\" }}>\r\n        <Paper sx={{ width: \"100%\", mb: 2 }}>\r\n          <Toolbar\r\n            sx={{\r\n              pl: { sm: 2 },\r\n              pr: { xs: 1, sm: 1 },\r\n            }}\r\n          >\r\n            <Typography\r\n              sx={{ flex: \"1 1 100%\" }}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              Projects Table\r\n            </Typography>\r\n          </Toolbar>\r\n          <Modal\r\n            isOpen={isOpen}\r\n            onRequestClose={closeModal}\r\n            closeTimeoutMS={200}\r\n            className=\"Modal\"\r\n            overlayClassName=\"Overlay\"\r\n            ariaHideApp={false}\r\n          >\r\n            {step === 1 ? (\r\n              <form\r\n                onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                }}\r\n              >\r\n                <center>\r\n                  <h1>Edit Project</h1>\r\n                </center>\r\n                <label htmlFor=\"projectName\">Project Name: </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"projectName\"\r\n                  name=\"projectName\"\r\n                  defaultValue={formProjectData[\"projectName\"]}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n                <label htmlFor=\"projectStartDate\">Start Date: </label>\r\n                <input\r\n                  type=\"date\"\r\n                  id=\"projectStartDate\"\r\n                  name=\"projectStartDate\"\r\n                  defaultValue={formProjectData[\"projectStartDate\"]}\r\n                  onChange={handleChange}\r\n                  onKeyDown={(e) => e.preventDefault()}\r\n                  required\r\n                />\r\n                <label htmlFor=\"projectEndDate\">End Date: </label>\r\n                <input\r\n                  type=\"date\"\r\n                  id=\"projectEndDate\"\r\n                  name=\"projectEndDate\"\r\n                  min={formProjectData[\"projectStartDate\"]}\r\n                  max={addOneYear(formProjectData[\"projectStartDate\"])}\r\n                  defaultValue={formProjectData[\"projectEndDate\"]}\r\n                  onChange={handleChange}\r\n                  onKeyDown={(e) => e.preventDefault()}\r\n                  required\r\n                />\r\n                <label htmlFor=\"projectManager\">Project Manager: </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"projectManager\"\r\n                  name=\"projectManager\"\r\n                  defaultValue={formProjectData[\"projectManager\"]}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n                <label\r\n                  htmlFor=\"projectBudget\"\r\n                  className={showError ? \"labelError\" : \"tempclass\"}\r\n                >\r\n                  Project Budget:{\" \"}\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  id=\"projectBudget\"\r\n                  name=\"projectBudget\"\r\n                  defaultValue={Number.parseFloat(\r\n                    formProjectData[\"projectBudget\"]\r\n                  )}\r\n                  onChange={handleChange}\r\n                  className={showError ? \"errorClass\" : \"tempclass\"}\r\n                  required\r\n                />\r\n                {showError && (\r\n                  <Alert severity=\"error\">\r\n                    Enter a positive value for amount!\r\n                  </Alert>\r\n                )}\r\n                <center>\r\n                  <button\r\n                    className=\"next\"\r\n                    onClick={() => setStep(2)}\r\n                    disabled={\r\n                      showError ||\r\n                      formProjectData[\"projectBudget\"] === \"\" ||\r\n                      isNaN(formProjectData[\"projectBudget\"])\r\n                    }\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </center>\r\n              </form>\r\n            ) : (\r\n              <form\r\n                className=\"form-step-2\"\r\n                onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                }}\r\n              >\r\n                <center>\r\n                  <h1>Remaining Budget:</h1>\r\n                  <h1>\r\n                    $\r\n                    {new Intl.NumberFormat().format(\r\n                      Number.parseFloat(formProjectData[\"projectBudget\"]) -\r\n                        Object.values(\r\n                          formProjectData[\"projectMonthlyBudgets\"]\r\n                        ).reduce((a, b) => (a ? a : 0) + (b ? b : 0), 0)\r\n                    )}\r\n                  </h1>\r\n                  <div className=\"form-2\">\r\n                    {(() => {\r\n                      const start = formProjectData[\"projectStartDate\"];\r\n                      const end = formProjectData[\"projectEndDate\"];\r\n                      let startDate = new Date(start);\r\n                      let endDate = new Date(end);\r\n                      let startMonth = startDate.getMonth();\r\n                      let endMonth = endDate.getMonth();\r\n                      let modifiedMonths;\r\n                      let currentYear = startDate.getFullYear();\r\n                      if (endMonth - startMonth > 0) {\r\n                        modifiedMonths = [\r\n                          ...months.slice(startMonth, endMonth + 1),\r\n                        ];\r\n                      } else {\r\n                        if (\r\n                          endMonth === startMonth &&\r\n                          currentYear === endDate.getFullYear()\r\n                        ) {\r\n                          modifiedMonths = [months[startMonth]];\r\n                        } else {\r\n                          modifiedMonths = [\r\n                            ...months.slice(startMonth, 12),\r\n                            ...months.slice(0, endMonth + 1),\r\n                          ];\r\n                        }\r\n                      }\r\n                      modifiedMonths = modifiedMonths.map((e) => {\r\n                        let x = e + \" '\" + currentYear.toString().substr(-2);\r\n                        if (e === \"Dec\") {\r\n                          currentYear += 1;\r\n                        }\r\n                        return x;\r\n                      });\r\n                      return modifiedMonths;\r\n                    })().map((month, index) => (\r\n                      <div className=\"month-inputs\" key={index}>\r\n                        <label\r\n                          className={\r\n                            showInputError[index]\r\n                              ? \"labelError2\"\r\n                              : \"month-class\"\r\n                          }\r\n                          htmlFor={month}\r\n                        >\r\n                          {month}\r\n                        </label>\r\n                        <input\r\n                          className={\r\n                            showInputError[index]\r\n                              ? \"errorClass2\"\r\n                              : \"month-class\"\r\n                          }\r\n                          name=\"month-input\"\r\n                          type=\"text\"\r\n                          value={\r\n                            formProjectData[\"projectMonthlyBudgets\"][\r\n                              _months[month.slice(0, 3)]\r\n                            ]\r\n                              ? Math.abs(\r\n                                  formProjectData[\"projectMonthlyBudgets\"][\r\n                                    _months[month.slice(0, 3)]\r\n                                  ]\r\n                                )\r\n                              : 0\r\n                          }\r\n                          min=\"0\"\r\n                          onKeyDown={(e) => {\r\n                            if (e.key === \"Enter\") {\r\n                              e.preventDefault();\r\n                            }\r\n                          }}\r\n                          onChange={(event) => {\r\n                            if (event.target.value === \"\") {\r\n                              event.target.value = 0;\r\n                            }\r\n                            if (\r\n                              event.target.validity.badInput ||\r\n                              !/^[0-9]\\d*(\\.\\d+)?$/.test(event.target.value)\r\n                            ) {\r\n                              let temp = showInputError;\r\n                              temp[index] = true;\r\n                              setShowInputError(temp);\r\n                            } else {\r\n                              let temp = showInputError;\r\n                              temp[index] = false;\r\n                              setShowInputError(temp);\r\n                            }\r\n                            let temp = {\r\n                              ...formProjectData[\"projectMonthlyBudgets\"],\r\n                            };\r\n                            temp[_months[month.slice(0, 3)]] = parseFloat(\r\n                              event.target.value ? event.target.value : 0\r\n                            );\r\n                            setFormProjectData(() => ({\r\n                              ...formProjectData,\r\n                              projectMonthlyBudgets: temp,\r\n                            }));\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  <button className=\"back\" onClick={() => setStep(1)}>\r\n                    Back\r\n                  </button>\r\n                  <button\r\n                    type=\"submit\"\r\n                    onClick={updateProject}\r\n                    id=\"projectSubmit\"\r\n                    disabled={\r\n                      !showInputError.every((e) => e === false) ||\r\n                      Number.parseFloat(formProjectData[\"projectBudget\"]) -\r\n                        Object.values(\r\n                          formProjectData[\"projectMonthlyBudgets\"]\r\n                        ).reduce((a, b) => (a ? a : 0) + (b ? b : 0), 0) !==\r\n                        0\r\n                    }\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </center>\r\n              </form>\r\n            )}\r\n            <button onClick={closeModal} id=\"closeButton\">\r\n              &times;\r\n            </button>\r\n          </Modal>\r\n\r\n          <TableContainer>\r\n            <Table\r\n              sx={{ minWidth: 750 }}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={\"medium\"}\r\n            >\r\n              <EnhancedTableHead\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onRequestSort={handleRequestSort}\r\n              />\r\n              <TableBody>\r\n                {stableSort(projectData, getComparator(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    return (\r\n                      <TableRow key={index}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {page * rowsPerPage + index + 1}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\" sx={{ paddingRight: 5 }}>\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\" sx={{ paddingRight: 5 }}>\r\n                          {formatDate(row.start_date)}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\" sx={{ paddingRight: 5 }}>\r\n                          {formatDate(row.end_date)}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\" sx={{ paddingRight: 5 }}>\r\n                          {row.manager}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\" sx={{ paddingRight: 5 }}>\r\n                          ${new Intl.NumberFormat().format(row.budget)}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              openModal();\r\n                              setFormProjectData({\r\n                                id: row.id,\r\n                                projectName: row.name,\r\n                                projectStartDate: row.start_date,\r\n                                projectEndDate: row.end_date,\r\n                                projectManager: row.manager,\r\n                                projectBudget: row.budget,\r\n                                projectMonthlyBudgets: row.monthly_budget,\r\n                              });\r\n                            }}\r\n                          >\r\n                            <EditIcon\r\n                              sx={{\r\n                                opacity: \"70%\",\r\n                              }}\r\n                            />\r\n                          </IconButton>\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              if (\r\n                                window.confirm(\r\n                                  \"Are you sure you want to delete?\"\r\n                                )\r\n                              ) {\r\n                                axios\r\n                                  .delete(\r\n                                    \"http://localhost:8000/api/projects/modify-project/\",\r\n                                    {\r\n                                      data: {\r\n                                        id: row.id,\r\n                                      },\r\n                                    }\r\n                                  )\r\n                                  .then(async () => {\r\n                                    const response = await axios.get(\r\n                                      \"http://localhost:8000/api/projects/\"\r\n                                    );\r\n                                    setProjectData(response.data);\r\n                                    setProjectId(projectData[0].id);\r\n                                  })\r\n                                  .catch(() => {\r\n                                    console.error();\r\n                                  });\r\n                              }\r\n                            }}\r\n                          >\r\n                            <DeleteIcon\r\n                              sx={{\r\n                                opacity: \"70%\",\r\n                              }}\r\n                            />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow\r\n                    style={{\r\n                      height: 53 * emptyRows,\r\n                    }}\r\n                  >\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={projectData.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport \"./Dashboard.css\";\r\nimport { tabContext } from \"../index\";\r\nimport axios from \"axios\";\r\nimport { CircularProgress, Card, CardContent } from \"@mui/material\";\r\n\r\nconst Dashboard = () => {\r\n\tconst { settab, projectId } = useContext(tabContext);\r\n\r\n\tconst [data, setData] = useState({});\r\n\tconst [labels, setLabels] = useState([]);\r\n\tconst [chartData, setChartData] = useState([]);\r\n\tconst [loader, setLoader] = useState(0);\r\n\t/* loader = {0 - loading, 1 - projects, 2 - no projects} */\r\n\r\n\tuseEffect(() => {\r\n\t\t(() => {\r\n\t\t\tlet temp1 = [];\r\n\t\t\tlet temp2 = [];\r\n\t\t\tlet apiData = {\r\n\t\t\t\texpenses: {},\r\n\t\t\t};\r\n\t\t\tconst url = `http://localhost:8000/api/project/${projectId}/`;\r\n\t\t\taxios\r\n\t\t\t\t.get(url)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tapiData = response.data;\r\n\t\t\t\t\tsetData(apiData);\r\n\t\t\t\t\tsetLabels([]);\r\n\t\t\t\t\tsetChartData([]);\r\n\t\t\t\t\tObject.keys(apiData[\"expenses\"]).map((expense) => {\r\n\t\t\t\t\t\tif (apiData[\"expenses\"][expense] !== 0) {\r\n\t\t\t\t\t\t\ttemp1.push(expense);\r\n\t\t\t\t\t\t\ttemp2.push(apiData[\"expenses\"][expense]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetLabels(temp1);\r\n\t\t\t\t\tsetChartData(temp2);\r\n\t\t\t\t\tsetLoader(1);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(error.response.status);\r\n\t\t\t\t\tif (error.response.status === 500) {\r\n\t\t\t\t\t\tsetLoader(2);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetLoader(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t})();\r\n\t}, [projectId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsettab(\"dash\");\r\n\t}, [settab]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loader === 0 && (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\theight: \"70vh\",\r\n\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<CircularProgress />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{loader === 1 && (\r\n\t\t\t\t<div id=\"dash\">\r\n\t\t\t\t\t<div id=\"left\">\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t\tboxShadow: 2,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<CardContent sx={{ display: \"grid\", placeItems: \"center\" }}>\r\n\t\t\t\t\t\t\t\t<h2 id=\"totaltext\">Total Budget</h2>\r\n\t\t\t\t\t\t\t\t<h1 id=\"totalamt\">\r\n\t\t\t\t\t\t\t\t\t${new Intl.NumberFormat().format(data[\"budget\"])}\r\n\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t\t<h2 id=\"inctext\">Incurred Expenses</h2>\r\n\t\t\t\t\t\t\t\t<h1 id=\"incamt\">\r\n\t\t\t\t\t\t\t\t\t${new Intl.NumberFormat().format(data[\"incurred_expenses\"])}\r\n\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t\tboxShadow: 2,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<CardContent sx={{ display: \"grid\", placeItems: \"center\" }}>\r\n\t\t\t\t\t\t\t\t<h1\r\n\t\t\t\t\t\t\t\t\tid={\r\n\t\t\t\t\t\t\t\t\t\tdata[\"monthly_budget_sum\"] - data[\"incurred_expenses\"] < 0\r\n\t\t\t\t\t\t\t\t\t\t\t? \"erroramt\"\r\n\t\t\t\t\t\t\t\t\t\t\t: \"cvamt\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t$\r\n\t\t\t\t\t\t\t\t\t{new Intl.NumberFormat().format(\r\n\t\t\t\t\t\t\t\t\t\tMath.round(\r\n\t\t\t\t\t\t\t\t\t\t\tdata[\"monthly_budget_sum\"] - data[\"incurred_expenses\"]\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t\t<h2 id=\"cvtext\">Cost Variance</h2>\r\n\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t\tboxShadow: 2,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<CardContent sx={{ display: \"grid\", placeItems: \"center\" }}>\r\n\t\t\t\t\t\t\t\t<h1\r\n\t\t\t\t\t\t\t\t\tid={\r\n\t\t\t\t\t\t\t\t\t\tdata[\"monthly_budget_sum\"] / data[\"incurred_expenses\"] < 1\r\n\t\t\t\t\t\t\t\t\t\t\t? \"erroramt\"\r\n\t\t\t\t\t\t\t\t\t\t\t: \"cpiamt\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{(\r\n\t\t\t\t\t\t\t\t\t\tdata[\"monthly_budget_sum\"] / data[\"incurred_expenses\"]\r\n\t\t\t\t\t\t\t\t\t).toFixed(2)}\r\n\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t\t<h2 id=\"cpitext\">Cost Performance Index</h2>\r\n\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t\tboxShadow: 2,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<CardContent sx={{ display: \"grid\", placeItems: \"center\" }}>\r\n\t\t\t\t\t\t\t\t<h1 id=\"percentamt\">\r\n\t\t\t\t\t\t\t\t\t{((data[\"incurred_expenses\"] / data[\"budget\"]) * 100).toFixed(\r\n\t\t\t\t\t\t\t\t\t\t2\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t%\r\n\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t\t<h2 id=\"percenttext\">spent</h2>\r\n\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t\tboxShadow: 2,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<CardContent sx={{ display: \"grid\", placeItems: \"center\" }}>\r\n\t\t\t\t\t\t\t\t<h1 id=\"eacamt\">\r\n\t\t\t\t\t\t\t\t\t$\r\n\t\t\t\t\t\t\t\t\t{new Intl.NumberFormat().format(\r\n\t\t\t\t\t\t\t\t\t\tMath.round(\r\n\t\t\t\t\t\t\t\t\t\t\tdata[\"budget\"] /\r\n\t\t\t\t\t\t\t\t\t\t\t\t(data[\"monthly_budget_sum\"] / data[\"incurred_expenses\"])\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t\t<h2 id=\"eactext\">Estimate at Completion</h2>\r\n\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t\tboxShadow: 2,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<CardContent sx={{ display: \"grid\", placeItems: \"center\" }}>\r\n\t\t\t\t\t\t\t\t<h1\r\n\t\t\t\t\t\t\t\t\tid={\r\n\t\t\t\t\t\t\t\t\t\tdata[\"budget\"] -\r\n\t\t\t\t\t\t\t\t\t\t\tdata[\"budget\"] /\r\n\t\t\t\t\t\t\t\t\t\t\t\t(data[\"monthly_budget_sum\"] /\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata[\"incurred_expenses\"]) <\r\n\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t\t\t? \"erroramt\"\r\n\t\t\t\t\t\t\t\t\t\t\t: \"vacamt\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t$\r\n\t\t\t\t\t\t\t\t\t{new Intl.NumberFormat().format(\r\n\t\t\t\t\t\t\t\t\t\tMath.round(\r\n\t\t\t\t\t\t\t\t\t\t\tdata[\"budget\"] -\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata[\"budget\"] /\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(data[\"monthly_budget_sum\"] /\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata[\"incurred_expenses\"])\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t\t<h2 id=\"vactext\">Variance at Completion</h2>\r\n\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"right\">\r\n\t\t\t\t\t\t{data[\"incurred_expenses\"] ? (\r\n\t\t\t\t\t\t\t<Doughnut\r\n\t\t\t\t\t\t\t\tid=\"donut\"\r\n\t\t\t\t\t\t\t\tdata={{\r\n\t\t\t\t\t\t\t\t\tlabels: [...labels],\r\n\t\t\t\t\t\t\t\t\tdatasets: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tdata: [...chartData],\r\n\t\t\t\t\t\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"rgb(255, 99, 132)\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"rgb(54, 162, 235)\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"rgb(255, 205, 86)\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"rgb(75, 192, 192)\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"rgb(255, 159, 64)\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"rgb(153, 102, 255)\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"rgb(201, 203, 2)\",\r\n\t\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<p className=\"no-data\">Add transactions to render the graph.</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{loader === 2 && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<center>\r\n\t\t\t\t\t\t<h1>Add a project to get started.</h1>\r\n\t\t\t\t\t</center>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport \"./Reports.css\";\r\nimport { tabContext } from \"../index\";\r\nimport axios from \"axios\";\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nconst Reports = () => {\r\n  const [expenseData, setExpenseData] = useState([]);\r\n  const [plannedData, setPlannedData] = useState([]);\r\n  const [labels, setLabels] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const { settab, projectId } = useContext(tabContext);\r\n  useEffect(() => {\r\n    settab(\"repo\");\r\n    axios\r\n      .get(`http://localhost:8000/api/project/${projectId}/report/`)\r\n      .then((response) => {\r\n        let data = response.data[\"expenses\"];\r\n        setExpenseData(data);\r\n        data = response.data[\"monthly_budgets\"];\r\n        setPlannedData(data);\r\n        data = response.data[\"labels\"];\r\n        setLabels(data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [settab, projectId]);\r\n  var data = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: \"Actual Cost\",\r\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\r\n        borderColor: \"rgb(255, 99, 132)\",\r\n        data: expenseData,\r\n        borderWidth: 1,\r\n      },\r\n      {\r\n        label: \"Planned Value\",\r\n        backgroundColor: \"rgba(54, 162, 235, 0.2)\",\r\n        borderColor: \"rgb(54, 162, 235)\",\r\n        data: plannedData,\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <>\r\n      {!isLoading ? (\r\n        <div id=\"outside\">\r\n          <div id=\"bar\">\r\n            <Bar\r\n              data={data}\r\n              options={{\r\n                scales: {\r\n                  x: { beginAtZero: true },\r\n                  y: { beginAtZero: true },\r\n                },\r\n              }}\r\n            />\r\n            <h1>Monthly Expenses Summary</h1>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            height: \"70vh\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reports;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Modal from \"react-modal\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport Transactions from \"./Components/Transactions\";\r\nimport Projects from \"./Components/Projects\";\r\nimport Dashboard from \"./Components/Dashboard\";\r\nimport Reports from \"./Components/Reports\";\r\nimport axios from \"axios\";\r\nimport \"./index.css\";\r\nimport \"./reset.css\";\r\nimport { Alert } from \"@mui/material\";\r\nimport { months, addOneYear, _months, subtractOneYear } from \"./utils.js\";\r\n\r\nModal.setAppElement(\"#root\");\r\nexport const tabContext = React.createContext();\r\n\r\nconst Main = () => {\r\n  const [tab, settab] = useState(\"dash\");\r\n  const [showingForm, setshowingForm] = useState(false);\r\n  const [projectId, setProjectId] = useState(1);\r\n  const [counter, setCounter] = useState(0);\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const [showError, setShowError] = useState(false);\r\n  const [showInputError, setShowInputError] = useState(Array(12).fill(false));\r\n  const [step, setStep] = useState(1);\r\n  const [monthBudget, setMonthBudget] = useState({});\r\n  const [projectData, setProjectData] = useState({\r\n    projectName: \"\",\r\n    projectStartDate: \"\",\r\n    projectEndDate: \"\",\r\n    projectManager: \"\",\r\n    projectBudget: 0,\r\n    projectMonthlyBudgets: monthBudget,\r\n  });\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const url = `http://localhost:8000/api/projects/names/`;\r\n      const response = await axios.get(url);\r\n      const allProjects = response.data;\r\n      setProjectNames(allProjects);\r\n      let p = localStorage.getItem(\"projectId\");\r\n      if (p) {\r\n        setProjectId(p);\r\n      }\r\n    })();\r\n  }, [counter]);\r\n\r\n  const style1 = { textDecoration: \"none\", color: \"white\" };\r\n  const style2 = {\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    borderBottom: \"1px solid white\",\r\n    paddingBottom: \"3px\",\r\n  };\r\n  const openForm = () => {\r\n    setshowingForm(true);\r\n  };\r\n  const closeForm = () => {\r\n    setshowingForm(false);\r\n    setShowError(false);\r\n    setShowInputError(Array(12).fill(false));\r\n    setStep(1);\r\n    setMonthBudget({});\r\n    setProjectData({\r\n      projectName: \"\",\r\n      projectStartDate: \"\",\r\n      projectEndDate: \"\",\r\n      projectManager: \"\",\r\n      projectBudget: 0,\r\n      projectMonthlyBudgets: monthBudget,\r\n    });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    if (\r\n      event.target.name === \"projectBudget\" ||\r\n      event.target.name === \"projectStartDate\" ||\r\n      event.target.name === \"projectEndDate\"\r\n    ) {\r\n      setProjectData((prevState) => ({\r\n        ...prevState,\r\n        projectMonthlyBudgets: {},\r\n      }));\r\n      setMonthBudget({});\r\n    }\r\n    if (event.target.name === \"projectBudget\") {\r\n      if (!/^[0-9]+$/.test(event.target.value)) {\r\n        setShowError(true);\r\n      } else {\r\n        setShowError(false);\r\n      }\r\n    }\r\n    setProjectData({\r\n      ...projectData,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const addProject = (event) => {\r\n    event.preventDefault();\r\n    if (!showError) {\r\n      const url = \"http://localhost:8000/api/projects/modify-project/\";\r\n      axios.post(url, projectData).catch((error) => {\r\n        console.log(error);\r\n      });\r\n      setCounter(counter - 1);\r\n      closeForm();\r\n    }\r\n  };\r\n\r\n  const remainingBudget =\r\n    projectData[\"projectBudget\"] -\r\n    Object.values(monthBudget).reduce((a, b) => (a ? a : 0) + (b ? b : 0), 0);\r\n\r\n  const handleProjectId = (event) => {\r\n    setProjectId(event.target.value);\r\n    localStorage.setItem(\"projectId\", event.target.value);\r\n  };\r\n  return (\r\n    <Router>\r\n      <div id=\"navbar\">\r\n        <div id=\"navleft\">\r\n          <h6>Project Budget Tracker</h6>\r\n          <Link to=\"/\" style={tab === \"dash\" ? style2 : style1}>\r\n            Dashboard\r\n          </Link>\r\n          <Link\r\n            to=\"/transactions\"\r\n            style={tab === \"tran\" ? style2 : style1}\r\n            onClick={() => settab(\"tran\")}\r\n          >\r\n            Transactions\r\n          </Link>\r\n          <Link to=\"/reports\" style={tab === \"repo\" ? style2 : style1}>\r\n            Reports\r\n          </Link>\r\n          <Link\r\n            to=\"/projects\"\r\n            style={tab === \"proj\" ? style2 : style1}\r\n            onClick={() => settab(\"proj\")}\r\n          >\r\n            Projects\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        isOpen={showingForm}\r\n        onRequestClose={closeForm}\r\n        closeTimeoutMS={200}\r\n        className=\"Modal\"\r\n        overlayClassName=\"Overlay\"\r\n        ariaHideApp={false}\r\n      >\r\n        {step === 1 ? (\r\n          <form\r\n            className=\"form-step-1\"\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n            }}\r\n          >\r\n            <center>\r\n              <h1 className=\"project-h1\">Add a Project</h1>\r\n            </center>\r\n            <label htmlFor=\"projectName\">Project Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"projectName\"\r\n              name=\"projectName\"\r\n              value={projectData[\"projectName\"]}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <label htmlFor=\"projectStartDate\">Start Date: </label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"projectStartDate\"\r\n              name=\"projectStartDate\"\r\n              value={projectData[\"projectStartDate\"]}\r\n              min={subtractOneYear(projectData[\"projectEndDate\"])}\r\n              max={projectData[\"projectEndDate\"]}\r\n              onChange={handleChange}\r\n              onKeyDown={(e) => e.preventDefault()}\r\n              required\r\n            />\r\n            <label htmlFor=\"projectEndDate\">End Date: </label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"projectEndDate\"\r\n              name=\"projectEndDate\"\r\n              min={projectData[\"projectStartDate\"]}\r\n              max={addOneYear(projectData[\"projectStartDate\"])}\r\n              value={projectData[\"projectEndDate\"]}\r\n              onChange={handleChange}\r\n              onKeyDown={(e) => e.preventDefault()}\r\n              required\r\n            />\r\n            <label htmlFor=\"projectManager\">Project Manager: </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"projectManager\"\r\n              name=\"projectManager\"\r\n              value={projectData[\"projectManager\"]}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <label\r\n              htmlFor=\"projectBudget\"\r\n              className={showError ? \"labelError\" : \"tempclass\"}\r\n            >\r\n              Project Budget:{\" \"}\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              step=\"any\"\r\n              id=\"projectBudget\"\r\n              name=\"projectBudget\"\r\n              defaultValue={\r\n                projectData[\"projectBudget\"] ? projectData[\"projectBudget\"] : \"\"\r\n              }\r\n              onChange={handleChange}\r\n              className={showError ? \"errorClass\" : \"tempclass\"}\r\n              required\r\n            />\r\n            {showError && (\r\n              <Alert severity=\"error\">Enter a positive value for amount!</Alert>\r\n            )}\r\n            <center>\r\n              <button\r\n                type=\"reset\"\r\n                onClick={() =>\r\n                  setProjectData({\r\n                    projectName: \"\",\r\n                    projectStartDate: \"\",\r\n                    projectEndDate: \"\",\r\n                    projectManager: \"\",\r\n                    projectBudget: 0,\r\n                    projectMonthlyBudgets: [Array(12).fill(0)],\r\n                  })\r\n                }\r\n              >\r\n                Reset\r\n              </button>\r\n              <button\r\n                className=\"next\"\r\n                onClick={() => setStep(2)}\r\n                disabled={\r\n                  projectData[\"projectName\"] === \"\" ||\r\n                  projectData[\"projectStartDate\"] === \"\" ||\r\n                  projectData[\"projectEndDate\"] === \"\" ||\r\n                  projectData[\"projectManager\"] === \"\" ||\r\n                  projectData[\"projectBudget\"] === \"\" ||\r\n                  projectData[\"projectBudget\"] === 0 ||\r\n                  showError\r\n                }\r\n              >\r\n                Next\r\n              </button>\r\n            </center>\r\n          </form>\r\n        ) : (\r\n          <form\r\n            className=\"form-step-2\"\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n            }}\r\n          >\r\n            <center>\r\n              <h1>Remaining Budget:</h1>\r\n              <h1>${new Intl.NumberFormat().format(remainingBudget)}</h1>\r\n              <div className=\"form-2\">\r\n                {(() => {\r\n                  const start = projectData[\"projectStartDate\"];\r\n                  const end = projectData[\"projectEndDate\"];\r\n                  let startDate = new Date(start);\r\n                  let endDate = new Date(end);\r\n                  let startMonth = startDate.getMonth();\r\n                  let endMonth = endDate.getMonth();\r\n                  let modifiedMonths;\r\n                  let currentYear = startDate.getFullYear();\r\n                  if (endMonth - startMonth > 0) {\r\n                    modifiedMonths = [\r\n                      ...months.slice(startMonth, endMonth + 1),\r\n                    ];\r\n                  } else {\r\n                    if (\r\n                      endMonth === startMonth &&\r\n                      currentYear === endDate.getFullYear()\r\n                    ) {\r\n                      modifiedMonths = [months[startMonth]];\r\n                    } else {\r\n                      modifiedMonths = [\r\n                        ...months.slice(startMonth, 12),\r\n                        ...months.slice(0, endMonth + 1),\r\n                      ];\r\n                    }\r\n                  }\r\n                  modifiedMonths = modifiedMonths.map((e) => {\r\n                    let x = e + \" '\" + currentYear.toString().substr(-2);\r\n                    if (e === \"Dec\") {\r\n                      currentYear += 1;\r\n                    }\r\n                    return x;\r\n                  });\r\n                  return modifiedMonths;\r\n                })().map((month, index) => (\r\n                  <div className=\"month-inputs\" key={index}>\r\n                    <label\r\n                      className={\r\n                        showInputError[index] ? \"labelError2\" : \"month-class\"\r\n                      }\r\n                      htmlFor={month}\r\n                    >\r\n                      {month}\r\n                    </label>\r\n                    <input\r\n                      className={\r\n                        showInputError[index] ? \"errorClass2\" : \"month-class\"\r\n                      }\r\n                      name=\"month-input\"\r\n                      type=\"text\"\r\n                      value={\r\n                        monthBudget[_months[month.slice(0, 3)]]\r\n                          ? Math.abs(monthBudget[_months[month.slice(0, 3)]])\r\n                          : 0\r\n                      }\r\n                      min=\"0\"\r\n                      onKeyDown={(e) => {\r\n                        if (e.key === \"Enter\") {\r\n                          e.preventDefault();\r\n                        }\r\n                      }}\r\n                      onChange={(event) => {\r\n                        if (event.target.value === \"\") {\r\n                          event.target.value = 0;\r\n                        }\r\n                        if (\r\n                          event.target.validity.badInput ||\r\n                          !/^[0-9]\\d*(\\.\\d+)?$/.test(event.target.value)\r\n                        ) {\r\n                          let temp = showInputError;\r\n                          temp[index] = true;\r\n                          setShowInputError(temp);\r\n                        } else {\r\n                          let temp = showInputError;\r\n                          temp[index] = false;\r\n                          setShowInputError(temp);\r\n                        }\r\n                        let temp = { ...monthBudget };\r\n                        temp[_months[month.slice(0, 3)]] = parseFloat(\r\n                          event.target.value ? event.target.value : 0\r\n                        );\r\n                        setMonthBudget(temp);\r\n                        setProjectData(() => ({\r\n                          ...projectData,\r\n                          projectMonthlyBudgets: temp,\r\n                        }));\r\n                      }}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <button className=\"back\" onClick={() => setStep(1)}>\r\n                Back\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={addProject}\r\n                id=\"projectSubmit\"\r\n                disabled={\r\n                  !showInputError.every((e) => e === false) ||\r\n                  remainingBudget !== 0\r\n                }\r\n              >\r\n                Submit\r\n              </button>\r\n            </center>\r\n          </form>\r\n        )}\r\n        <button onClick={closeForm} id=\"closeButton\">\r\n          &times;\r\n        </button>\r\n      </Modal>\r\n      <center>\r\n        <div id=\"projectdiv\">\r\n          <select\r\n            id={tab === \"proj\" ? \"hideprojectselect\" : \"projectselect\"}\r\n            value={projectId}\r\n            onChange={handleProjectId}\r\n          >\r\n            {Object.keys(projectNames).map((project) => (\r\n              <option key={project} value={project}>\r\n                {projectNames[project]}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <div className=\"multi-button\">\r\n            <button id=\"projectbutton\" className=\"cut\" onClick={openForm}>\r\n              + Add Project\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </center>\r\n      <tabContext.Provider\r\n        value={{ settab, projectId, counter, setCounter, setProjectId }}\r\n      >\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Dashboard} />\r\n          <Route exact path=\"/transactions\" component={Transactions} />\r\n          <Route exact path=\"/reports\" component={Reports} />\r\n          <Route exact path=\"/projects\" component={Projects} />\r\n        </Switch>\r\n      </tabContext.Provider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nReactDOM.render(<Main />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}